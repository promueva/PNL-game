***(

Using the <<+->> modality to complete the frame where balance holds/ 

***)

load ../game . 

smod MODEL is
    pr GAME-STRAT .
    ops a b c d  : -> Agent .
    op p       : -> Prop .

    var AG : Agent .
    var i  : Nominal .
    var AT : Atom .

    --- Configuring the model 
    eq agents = a, b, c, d .
    eq val(AG, p) = AG == a . 

    eq den(0) = a .
    eq den(1) = b .
    eq den(2) = c .
    eq den(3) = d .


    op model : -> Model . 
    eq model = { R+{ (b, d), reflex(agents) } , R-{ (a ,b ) , (a, c)} } .

    --- Collective connectedness 
    op cc :  -> Formula . 
    eq cc =  ( ([+] p) -> ([A] p)) \/  ( ([-] p) -> ([A] p)) .

    --- Local balance property 
    op lb : Atom -> Formula . 
    eq lb(AT) =  ((((<+> (<+> AT)) \/ (<-> (<-> AT))) -> (<+> AT)) /\ 
                  (((<+> (<-> AT)) \/ (<-> (<+> AT))) -> (<-> AT))) .

    --- After adding some links, it is balanced and fully connected 
    op init : -> Tree .
    eq init = <  model : (P @ a : +- +- +- (cc /\ lb(p)) ) > .
endsm


eof

--- I do have a winning strategy (adding a +(b,c), +(d,c), -(a,d))
srew [1] init using expand-tree .

